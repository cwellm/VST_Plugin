name: Release Next Version
on:
  workflow_dispatch:

jobs:
  check-run-validity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Check for passing workflow runs
        env:
          token: ${{ secrets.GH_RELEASE }}
        run: python .github/automation_scripts/exec_script.py --name "check_latest_workflow_runs" --token "${token}"

  get-current-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.plugin_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - id: plugin_version
        name: Get current plugin version
        run: | 
          version=$(python .github/automation_scripts/exec_script.py --name "get_current_plugin_version" --token "dummy")
          echo "version=${version}" >> "$GITHUB_OUTPUT"


  create-build-artifacts:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, windows-2019, windows-2022]
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    needs: [check-run-validity, get-current-version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv
      - name: Install Python dependencies for build scripts in virtual env
        run: pipenv install -r requirements.txt
      - name: Install OS specific configuration and build tree (Linux)
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: | 
          sudo apt-get update
          sudo apt-get install --yes freeglut3-dev g++ libasound2-dev libcurl4-openssl-dev \
            libfreetype6-dev libjack-jackd2-dev libx11-dev libxcomposite-dev \
            libxcursor-dev libxinerama-dev libxrandr-dev mesa-common-dev
          pipenv run conan config install "config/dep/conan/profiles/linux.conanprofile" -tf=profiles
          pipenv run conan build . --output-folder=build --build=missing --profile:build=linux.conanprofile --profile:host=linux.conanprofile
      - name: Install OS specific configuration and build tree (Windows 2019)
        if: ${{ contains(matrix.os, 'windows') && contains(matrix.os, '2019') }}
        run: | 
          pipenv run conan config install "config/dep/conan/profiles/windows2019.conanprofile" -tf=profiles
          pipenv run conan build . --output-folder=build --build=missing --profile:build=windows2019.conanprofile --profile:host=windows2019.conanprofile
      - name: Install OS specific configuration and build tree (Windows 2022)
        if: ${{ contains(matrix.os, 'windows') && contains(matrix.os, '2022') }}
        run: | 
          pipenv run conan config install "config/dep/conan/profiles/windows2022.conanprofile" -tf=profiles
          pipenv run conan build . --output-folder=build --build=missing --profile:build=windows2022.conanprofile --profile:host=windows2022.conanprofile
      - name: Upload artifact
        env:
          VERSION: ${{needs.get-current-version.outputs.version}}
        uses: actions/upload-artifact@v3
        with:
           name: ${{ matrix.os }}-V${{ env.VERSION }}
           path: vst3/**/*.vst3
           retention-days: 90

  increase-version:
    runs-on: ubuntu-latest
    needs: create-build-artifacts
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Increase minor plugin version
        run: python .github/automation_scripts/exec_script.py --name "increase_plugin_version" --token "dummy"
      - name: Push changes to GitHub
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "user@email.com"
          git commit -a -m "Bump up plugin version"
          git push

  publish-release:
    runs-on: ubuntu-latest
    needs: increase-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Publish Release
        env:
          token: ${{ secrets.GH_RELEASE }}
        run: python .github/automation_scripts/exec_script.py --name "publish_latest_release_draft" --token "${token}"
